eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CiAgIyBGZXRjaCBmb2xkZXJzIGZyb20gZGlzdHJpYnV0ZWQgY2FjaGUKICBzZnRwX2NhY2hlX3Jlc3RvcmU6CiAgICBpbWFnZTogcGx1Z2lucy9zZnRwLWNhY2hlCiAgICByZXN0b3JlOiB0cnVlCiAgICBtb3VudDoKICAgICAgLSAvZHJvbmUvLml2eTIKICAgICAgLSAvZHJvbmUvLnNidAogICAgICAtIC9kcm9uZS8uZ2l0CgogIHRlc3RzOgogICAgaW1hZ2U6IHNjYWxhcGxhdGZvcm0vc2NhbGE6MC42CiAgICBwdWxsOiB0cnVlCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBDT1VSU0lFUl9DQUNIRT0vZHJvbmUvY2FjaGUvY291cnNpZXIKICAgIGNvbW1hbmRzOgogICAgICAtIGdpdCBmZXRjaCAtLXRhZ3MgJiYgZ2l0IGxvZyB8IGhlYWQgLW4gMjAKICAgICAgLSAuL2Jpbi9jaGVja0NMQS5zaAogICAgICAtIC4vYmluL3NjYWxhZm10IC0tdGVzdAogICAgICAtIC91c3IvYmluL3NidCBjaQoKICBwdWJsaXNoOgogICAgaW1hZ2U6IG9sYWZ1cnBnL3NjYWxhZml4OjAuMy4wCiAgICBjb21tYW5kczoKICAgICAgLSAuL2Jpbi9iaW50cmF5LnNoCiAgICB3aGVuOgogICAgICBldmVudDogcHVzaAogICAgICBicmFuY2g6IFttYXN0ZXJdCgogIG5vdGlmeToKICAgIGltYWdlOiBkcmlsbHN0ZXIvZHJvbmUtZW1haWwKICAgIGhvc3Q6IHNtdHAubWFpbGd1bi5vcmcKICAgIHVzZXJuYW1lOiBub3JlcGx5QGRyb25lLmdlaXJzc29uLmNvbQogICAgcGFzc3dvcmQ6ICR7TUFJTEdVTl9QQVNTV09SRH0KICAgIGZyb206IG5vcmVwbHlAZHJvbmUuZ2VpcnNzb24uY29tCiAgICByZWNpcGllbnRzOgogICAgICAtIG9sYWZ1cnBnQGdtYWlsLmNvbQogICAgd2hlbjoKICAgICAgZXZlbnQ6IHB1c2gKICAgICAgYnJhbmNoOiBbbWFzdGVyXQogICAgICBzdGF0dXM6IFtjaGFuZ2VkLCBmYWlsdXJlXQoKICAjIFNhdmUgZm9sZGVycyBpbiBkaXN0cmlidXRlZCBjYWNoZQogIHNmdHBfY2FjaGVfcmVidWlsZDoKICAgIGltYWdlOiBwbHVnaW5zL3NmdHAtY2FjaGUKICAgIHJlYnVpbGQ6IHRydWUKICAgIG1vdW50OgogICAgICAtIC9kcm9uZS8uaXZ5MgogICAgICAtIC9kcm9uZS8uc2J0CiAgICAgIC0gL2Ryb25lLy5naXQK.6KtTEYY_KsxurVxINB5a03moBhx6niLxy8dspu0aBDk